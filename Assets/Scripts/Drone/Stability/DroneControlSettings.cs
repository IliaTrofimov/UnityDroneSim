using UnityEngine;


namespace Drone.Stability
{
    /// <summary>
    /// Collection of settings for drone movements and stabilization. Can be stored as an asset.
    /// </summary>
    [CreateAssetMenu(menuName = "Drone Settings/Drone Control Settings", fileName = "DroneControlSettings")]
    public class DroneControlSettings : ScriptableObject
    {
        /// <summary>Max vertical speed of the drone when using stabilization (meters per second).</summary>
        [Header("Throttle and Torque")]
        [Range(0f, 10f)] public float maxLiftSpeed = 5;
        
        /// <summary>Max lift force generated by single drone motor in newtons.</summary>
        /// <remarks>Larger values mean that drone will reach target speed faster.</remarks>
        [Range(0f, 100f)] public float maxLiftForce = 30;
       
        /// <summary>Max torque generated by single drone motor.</summary>
        [Range(0f, 1f)]  public float torqueMultiplier = 0.005f;
        
        /// <summary>Throttle PID controller's parameters.</summary>
        /// <remarks>I factor must be greater than 0 to compensate gravity.</remarks>
        public PidParameters pidThrottle = new(1, 0.7f, 0.01f);

        
        /// <summary>Max pitch angle (X axis rotation) in degrees when using stabilization.</summary>
        [Header("Pitch")]
        [Range(0f, 60f)] public float maxPitchAngle = 20;
        
        /// <summary>Max pitch force component value. Must be in range [0, 1].</summary>
        /// <remarks>Larger values mean that drone will reach target pitch angle faster.</remarks>
        [Range(0f, 1f)]  public float maxPitchForce = 0.25f;
        
        /// <summary>Pitch PID controller's parameters.</summary>
        public PidParameters pidPitch = new(1, 0.1f, 0.01f);
        
        
        /// <summary>Max yaw rotation speed (Y axis rotation) in degrees per second when using stabilization.</summary>
        [Header("Yaw")]
        [Range(0f, 60f)] public float maxYawSpeed = 2f;
        
        /// <summary>Max yaw force component value. Must be in range [0, 1].</summary>
        /// <remarks>Larger values mean that drone will reach target yaw speed faster.</remarks>
        [Range(0f, 1f)]  public float maxYawForce = 0.1f;
        
        /// <summary>Yaw PID controller's parameters.</summary>
        public PidParameters pidYaw = new(1, 0.1f, 0.01f);
        
        
        /// <summary>Max roll angle (Z axis rotation) in degrees when using stabilization.</summary>
        [Header("Roll")]
        [Range(0f, 60f)] public float maxRollAngle = 20;
        
        /// <summary>Max yaw force component value. Must be in range [0, 1].</summary>
        /// <remarks>Larger values mean that drone will reach target roll angle faster.</remarks>
        [Range(0f, 1f)] public float maxRollForce = 0.25f;
       
        /// <summary>Roll PID controller's parameters.</summary>
        public PidParameters pidRoll = new (1, 0.1f, 0.001f);

        
        private void OnValidate()
        {
            // PID output always clamped
            pidThrottle.minOutput = -maxLiftForce;
            pidThrottle.maxOutput = maxLiftForce;

            //pidThrottle.SetClamping(maxLiftForce, maxLiftSpeed);
            pidPitch.SetClamping(maxPitchForce);
            pidYaw.SetClamping(maxYawForce);
            pidRoll.SetClamping(maxRollForce);
        }
    }
}